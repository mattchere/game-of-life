{"version":3,"sources":["components/PlayBar.js","components/Cell.js","components/Row.js","components/Board.js","components/GenerationBar.js","App.js","registerServiceWorker.js","index.js"],"names":["PlayBar","react_default","a","createElement","className","onClick","this","props","start","pause","clear","random","Component","Cell","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","event","change","target","id","show","Row","row","map","c","i","components_Cell","key","String","Board","board","components_Row","GenerationBar","gen","App","state","Array","fill","undefined","v","generation","livingNeighbours","generateNeighbours","generateNext","startGame","pauseGame","randomBoard","clearBoard","loc","split","Number","col","newBoard","slice","setState","_this2","reduce","acc","val","topleft","topmid","topright","midleft","midright","botleft","botmid","botright","neighbours","push","_this3","j","n","interval","setInterval","clearInterval","Math","components_PlayBar","components_Board","components_GenerationBar","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d5721c24.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\n\nclass PlayBar extends Component {\n  render() {\n    return (\n      <div className=\"playbar\">\n        <ul className=\"buttonbar\">\n          <li><button onClick={this.props.start}>Run</button></li>\n          <li><button onClick={this.props.pause}>Pause</button></li>\n          <li><button onClick={this.props.clear}>Clear</button></li>\n          <li><button onClick={this.props.random}>Random</button></li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default PlayBar;\n","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    this.props.change(event.target.id);\n  }\n\n  render() {\n    return (\n      <div \n        className={this.props.show ? 'cell show' : 'cell'} \n        id={this.props.id}\n        onClick={this.handleClick}\n      >\n      </div>\n    );\n  }\n}\n\nexport default Cell;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport Cell from './Cell';\n\nclass Row extends Component {\n  render() {\n    return (\n      <div className=\"row\">\n        {this.props.row.map((c, i) => \n          <Cell \n            key={i}\n            id={String(this.props.id) + ',' + String(i)}\n            show={c}\n            change={this.props.change}\n          />)}\n      </div>\n    );\n  }\n}\n\nexport default Row;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport Row from './Row';\n\nclass Board extends Component {\n  render() {\n    return (\n      <div className=\"board\">\n        {this.props.board.map((row, i) => \n          <Row key={i} row={row} id={i} change={this.props.change} />)}\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React, { Component } from 'react';\nimport '../App.css';\n\nclass GenerationBar extends Component {\n  render() {\n    return (\n      <div className=\"generation\">\n        <p>Generation: {this.props.gen}</p>\n      </div>\n    );\n  }\n}\n\nexport default GenerationBar;\n","import React, { Component } from 'react';\nimport './App.css';\nimport PlayBar from './components/PlayBar';\nimport Board from './components/Board';\nimport GenerationBar from './components/GenerationBar';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: new Array(50).fill(undefined).map(v => new Array(70).fill(false)),\n      start: undefined,\n      generation: 0\n    }\n    this.change = this.change.bind(this);\n    this.livingNeighbours = this.livingNeighbours.bind(this);\n    this.generateNeighbours = this.generateNeighbours.bind(this);\n    this.generateNext = this.generateNext.bind(this);\n    this.startGame = this.startGame.bind(this);\n    this.pauseGame = this.pauseGame.bind(this);\n    this.randomBoard = this.randomBoard.bind(this);\n    this.clearBoard = this.clearBoard.bind(this);\n  }\n\n  change(id) {\n    const loc = id.split(',');\n    const row = Number(loc[0]);\n    const col = Number(loc[1]);\n    const newBoard = this.state.board.slice();\n    newBoard[row][col] = \n      newBoard[row][col] ? false : true;\n    this.setState({\n      board: newBoard\n    })\n  }\n\n  livingNeighbours(row, col) {\n    const neighbours = this.generateNeighbours(row, col);\n    const n = neighbours.reduce((acc, val) =>\n      this.state.board[val[0]][val[1]] ? acc+1 : acc, 0);\n    return n;\n  }\n\n  generateNeighbours(row, col) {\n    const\n      topleft = [row-1, col-1],\n      topmid = [row-1, col],\n      topright = [row-1, col+1],\n      midleft = [row, col-1],\n      midright = [row, col+1],\n      botleft = [row+1, col-1],\n      botmid = [row+1, col],\n      botright = [row+1, col+1];\n    \n    let neighbours = []\n    if (row > 0) {\n      neighbours.push(topmid);\n      if (col > 0) {\n        neighbours.push(topleft);\n      }\n      if (col < 69) {\n        neighbours.push(topright);\n      }\n    }\n    if (row < 49) {\n      neighbours.push(botmid);\n      if (col > 0) {\n        neighbours.push(botleft);\n      }\n      if (col < 69) {\n        neighbours.push(botright);\n      }\n    }\n    if (col > 0) {\n      neighbours.push(midleft);\n    }\n    if (col < 69) {\n      neighbours.push(midright);\n    }\n    return neighbours;\n\n  }\n\n  generateNext() {\n    const newBoard = this.state.board.map((row, i) =>\n      row.map((v, j) => {\n        const n = this.livingNeighbours(i, j);\n        if (v && (n === 2 || n === 3)) {\n          return true;\n        }\n        else if (!v && n === 3) {\n          return true;\n        }\n        return false;\n      }))\n    this.setState({\n      board: newBoard,\n      generation: this.state.generation + 1\n    })\n  }\n\n  startGame() {\n    const interval = setInterval(this.generateNext, 100);\n    this.setState({\n      start: interval\n    })\n  }\n\n  pauseGame() {\n    clearInterval(this.state.start);\n    this.setState({\n      start: undefined\n    })\n  }\n\n  randomBoard() {\n    const newBoard = this.state.board.map(row =>\n      row.map(v => Math.random() > 0.75 ? true : false));\n    this.pauseGame();\n    this.setState({\n      board: newBoard,\n      generation: 0\n    })\n  }\n\n  clearBoard() {\n    const newBoard = this.state.board.map(row =>\n      row.map(v => false));\n    this.pauseGame();\n    this.setState({\n      board: newBoard,\n      generation: 0\n    })\n  }\n\n  componentWillMount() {\n    this.randomBoard();\n  }\n\n  render() {\n    \n    return (\n      <div className=\"App\">\n        <h1 className=\"heading\">Conway's Game of Life</h1>\n        <PlayBar \n          start={this.startGame} \n          pause={this.pauseGame} \n          clear={this.clearBoard}\n          random={this.randomBoard}\n        />\n        <Board board={this.state.board} change={this.change} />\n        <GenerationBar gen={this.state.generation} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}